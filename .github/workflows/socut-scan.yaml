name: Docker Image CI For scout Branch

on:
  push:
    branches: [ "scout" ]
  pull_request:
    branches: [ "scout" ]

env:
  AWS_REGION: ap-south-1          # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: angular         # set this to your Amazon ECR repository name

jobs:
  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   - name: Configure AWS credentials
  #     uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: ${{ env.AWS_REGION }}

  #   - name: Login to Amazon ECR
  #     id: login-ecr
  #     uses: aws-actions/amazon-ecr-login@v1

  #   - name: Build, tag, and push image to Amazon ECR
  #     id: build-image
  #     env:
  #       ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #       IMAGE_TAG: dev
  #     run: |
  #       # Build a docker container and
  #       # push it to ECR so that it can
  #       # be deployed to ECS.
  #       docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
  #       docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  #       echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT


  scan:
    name: Scan the Docker image
    runs-on: ubuntu-latest
    steps:

    - uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}    

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: dev
      run: |
        docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
    # - name: Docker Scout Quickview and CVEs
    #   uses: docker/scout-action@v1
    #   with:
    #      command: quickview,cves
    #      image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #      only-severities: critical,high

    - name: Docker Scout Quickview and CVEs
      run: |
        curl -sSL https://get.docker.com/scout-cli | sh
        docker scout inspect --local $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG